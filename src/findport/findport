#!/usr/bin/env sh

USAGE="Usage: $0 [-n num-results] [-e] [-T] port-name"
OPTIND=1
EXACT=0
TRIM=1
n=0

: ${PORTSDIR:="/usr/ports"}

EXCLUDE="distfiles"
for d in $(find "${PORTSDIR}" -type d \
                -mindepth 1 -maxdepth 1 \
                -regex "${PORTSDIR}/[A-Z].*" \
                | xargs basename); do 
        EXCLUDE="${EXCLUDE}|$d"
done
echo "Excluding /.*($EXCLUDE).*/" >&2

while getopts "en:" opt; do
	case "${opt}" in
		e)
			EXACT=1
			;;
		T)
                        TRIM=0
			;;
		n)
			n=${OPTARG}
			;;
		\?)
			echo "${USAGE}"
			exit 1
			;;
	esac
done

shift $((OPTIND-1))

[ "${1:-}" = "--" ] && shift


if [ $# -le 0 ]; then
	echo "No port name given"
	echo "${USAGE}"
fi

for portname in $@
do
	if [ ${EXACT} -eq 0 ]; then
                NAME="*${portname}*"
        else
                NAME="${portname}"
        fi
	if [ ${TRIM} -eq 0 ]; then
                SUBPROG="!/${EXCLUDE}/ { print }"
        else
                SUBPROG="!/${EXCLUDE}/ { sub(/^$(echo ${PORTSDIR} | sed -e 's#/#\\/#g')\//, \"\"); print }"
	fi
        foundports=$(find "${PORTSDIR}" -type d -mindepth 2 -maxdepth 2 -name "${NAME}" | awk "${SUBPROG}")
	numports=$(echo ${foundports} | wc -w)
	if [ $n -eq 0 -o ${numports} -le $n ]; then
		printf "${foundports}\n"
	else
		printf "${foundports}\n" | head -n $n
	fi
done
